{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/phoneBook/phonebook-actions.js","redux/phoneBook/phonebook-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/rock.jpg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","views/HomeViews.js","views/RegisterView.js","views/LoginViews.js","components/Container/Container.styled.jsx","components/Container/Container.js","components/Section/Section.styled.jsx","components/Section/Section.js","components/Phonebook/PhoneBook.styled.jsx","components/Phonebook/Phonebook.js","redux/phoneBook/phonebook-selectors.js","redux/phoneBook/phonebook-operations.js","components/Phonebook/PhoneBook.container.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/Filter/Filter.container.js","views/PhonebookViews.js","components/App/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","createAsyncThunk","credentials","a","post","data","console","log","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSlice","createSlice","name","initialState","user","email","isLoggedIn","isFetchingCurrentUser","extraReducers","fulfilled","action","payload","pending","rejected","fetchPhonebookRequest","createAction","fetchPhonebookSuccess","fetchPhonebookError","addPhonebookRequest","addPhonebookSuccess","addPhonebookError","deletePhonebookRequest","deletePhonebookSuccess","deletePhonebookError","filterContacts","loading","createReducer","filterReducer","contacts","filter","id","combineReducers","authPersistConfig","key","storage","whitelist","myMiddleware","store","next","rootReducer","phoneBook","phoneReducer","persistReducer","authReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistStore","authSelectors","getUsername","getLoggedIn","getIsFetchingCurrent","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","borderRadius","marginRight","pap","UserMenu","dispatch","useDispatch","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","minHeight","title","fontSize","textAlign","HomeView","role","form","label","flexDirection","marginBottom","RegisterView","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","evt","preventDefault","autoComplete","onChange","border","backgroundColor","input","LoginView","Wrapper","styled","div","Container","children","Name","h2","Section","Form","Label","Input","Button","button","Phonebook","number","handleSubmitForm","newContactName","props","find","toLowerCase","alert","reset","handleInputChange","setState","currentTarget","this","formNameId","uuidv4","formNumberId","htmlFor","pattern","required","trim","addNameFhoneBook","React","Component","getContacts","getFilter","getVisibleFilter","createSelector","contact","toLocaleLowerCase","includes","getLoading","connect","contactNew","then","catch","error","addContact","List","ul","Item","li","onDelete","delete","deleteContact","map","Filter","PhonebookViews","fetchContact","isLoadingContacts","className","App","useEffect","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a535062.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n\n\n\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `bearer is ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post(\n      '/users/signup',\n      credentials,\n    );\n    console.log(data, `data`);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // dispatch(fetchPhonebookError(error))\n    console.log(error);\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  console.log(credentials, `crenditials`);\n  console.log(axios.defaults, `url`);\n\n  try {\n    const { data } = await axios.post(\n      `/users/login`,\n      credentials,\n    );\n    console.log(data, `data`);\n    token.set(data.token);\n    token.unset();\n    return data;\n  } catch (error) {\n    // dispatch(fetchPhonebookError(error))\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    const { data } = await axios.post(\n      '/users/logout',\n    );\n    return data;\n  } catch (error) {\n    // dispatch(fetchPhonebookError(error))\n  }\n});\n\n// const getCurrentUser = () => async (dispatch, getState) => {\n//   const {\n//     auth: { token: persistedToken },\n//   } = getState();\n\n//   if (!persistedToken) {\n//     return;\n//   }\n\n//   token.set(persistedToken);\n//   dispatch(getCurrentUserRequest());\n\n//   try {\n//     const response = await axios.get('/users/current');\n\n//     dispatch(getCurrentUserSuccess(response.data));\n//   } catch (error) {\n//     dispatch(getCurrentUserError(error.message));\n//   }\n// };\n\n const fetchCurrentUser = createAsyncThunk(\n    'auth/refresh',\n   async (_, thunkAPI) => {\n      console.log(thunkAPI, `APICURR`)\n        const state = thunkAPI.getState();\n        const persistedToken = state.auth.token;\n        if (persistedToken === null) {\n            return thunkAPI.rejectWithValue();\n        }\n        token.set(persistedToken);\n        try {\n            const { data } = await axios.get('/users/current');\n            return data;\n        } catch (error) {\n\n        }\n        \n        \n    }\n)\n\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser\n};\nexport default authOperations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      console.log(state, `STATE`);\n      state.user = action.payload.user;\n      console.log(action, `dhdih`);\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      console.log(state, `state logout`)\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n             console.log(state, `usercurrent`)\n            state.isFetchingCurrentUser = true;\n        },\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\n            state.user = action.payload;\n            state.isLoggedIn = true;\n            state.isFetchingCurrentUser = false;\n        },\n        [authOperations.fetchCurrentUser.rejected](state) {\n            state.isFetchingCurrentUser = false;\n        },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchPhonebookRequest = createAction('phonebook/fetchContact');\nexport const fetchPhonebookSuccess = createAction(\n  'phonebook/fetchContactSuccess',\n);\nexport const fetchPhonebookError = createAction('phonebook/fetchContactError');\n\nexport const addPhonebookRequest = createAction('phonebook/addContact');\nexport const addPhonebookSuccess = createAction('phonebook/addContactSuccess');\nexport const addPhonebookError = createAction('phonebook/addContactError');\n\nexport const deletePhonebookRequest = createAction('phonebook/deleteContact');\nexport const deletePhonebookSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deletePhonebookError = createAction(\n  'phonebook/deleteContactError',\n);\n\nexport const filterContacts = createAction('phonebook/cgangeFilter');\n\n// import phoneBookTypes from './phonebook-types';\n// import { v4 as uuidv4 } from 'uuid';\n// import store from '../store';\n\n// export const addContact = data => ({\n//   type: phoneBookTypes.ADD_CONTACT,\n//   payload: {\n//     id: uuidv4(),\n//     name: data.name,\n//     number: data.number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: phoneBookTypes.DELETE,\n//   payload: contactId,\n// });\n\n// export const filterContacts = value => ({\n//   type: phoneBookTypes.FILTER,\n//   payload: value,\n// });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  addPhonebookError,\n  addPhonebookRequest,\n  addPhonebookSuccess,\n  deletePhonebookError,\n  deletePhonebookRequest,\n  deletePhonebookSuccess,\n  fetchPhonebookError,\n  fetchPhonebookRequest,\n  fetchPhonebookSuccess,\n} from './phonebook-actions';\n\nconst initialStateFilter = '';\nconst initialStateContacts = [];\n\nconst loading = createReducer(false, {\n  [addPhonebookRequest]: () => true,\n  [addPhonebookSuccess]: () => false,\n  [addPhonebookError]: () => false,\n  [deletePhonebookRequest]: () => true,\n  [deletePhonebookSuccess]: () => false,\n  [deletePhonebookError]: () => false,\n  [fetchPhonebookRequest]: () => true,\n  [fetchPhonebookSuccess]: () => false,\n  [fetchPhonebookError]: () => false,\n});\nconst filterReducer = createReducer(initialStateFilter, {\n  'phonebook/cgangeFilter': (_, action) => action.payload,\n});\n\nconst contacts = createReducer(initialStateContacts, {\n  [fetchPhonebookSuccess]: (_, { payload }) => payload,\n\n  [addPhonebookSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deletePhonebookSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n\nexport default combineReducers({\n  contacts,\n  filter: filterReducer,\n  loading,\n  \n});\n\n// import { combineReducers } from 'redux';\n// import phoneBookTypes from './phonebook-types';\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case phoneBookTypes.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const contacts = (\n//   state = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case phoneBookTypes.ADD_CONTACT:\n//       const normalizedName = state.find(\n//         contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n//       );\n\n//       if (normalizedName) {\n//         alert(`${payload.name} is alredy in contacts.`);\n//         return state;\n//       }\n//       return [...state, payload];\n\n//     case phoneBookTypes.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts,\n//   filter: filterReducer,\n// });\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './auth/auth-slice';\n\nimport phoneReducer from './phoneBook/phonebook-reducer';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst myMiddleware = store => next => action => {\n  next(action);\n};\n\nconst rootReducer = combineReducers({\n  phoneBook: phoneReducer,\n  auth: persistReducer(authPersistConfig, authReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    myMiddleware,\n    logger,\n  ],\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n// const feedbackStore = {\n//   store,\n//   persistor,\n// };\n\n// export default feedbackStore;\n\n// const store = configureStore({\n//   reducer: rootReducer,\n\n//   middleware: getDefaultMiddleware =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\n//       },\n//       myMiddleware,\n//     }).concat(logger),\n//   myMiddleware,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n// const middleware = [\n//   ...getDefaultMiddleware({\n//        serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   myMiddleware,\n//     logger,\n// ]\n// const store = configureStore({\n//   reducer: rootReducer,\n\n//   middleware,\n//    logger,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n","const getUsername = state => {\n  console.log(state, `getusername`);\n  return state.auth.user.name;\n};\nconst getLoggedIn = state => {\n  console.log(state, `loggedin`);\n  return state.auth.isLoggedIn;\n};\n const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\n\nconst authSelectors = {\n  getUsername,\n  getLoggedIn,\n  getIsFetchingCurrent\n};\nexport default authSelectors;\n","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getLoggedIn);\n return (\n\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      General\n    </NavLink>\n\n   {/* {isLoggedIn &&  <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Phonebook\n    </NavLink>} */}\n      <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Phonebook\n    </NavLink>\n  </nav>\n);\n} \n\n// export default Navigation;\n","export default __webpack_public_path__ + \"static/media/rock.22a7a8d2.jpg\";","import { withTheme } from '@emotion/react';\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\nimport authSelectors from '../../redux/auth/auth-selectors';\n// import defaultAvatar from './default-avatar.png';\nimport defaultAvatar from './rock.jpg';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: '50%',\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n    color: 'white',\n  },\n  pap: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"40\" style={styles.avatar} />\n      <span style={styles.name}>\n        Welcome, <span style={styles.pap}>{name}</span>\n      </span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n}\n// const mapStateToProps = state => ({\n//   name: authSelectors.getUsername(state),\n//   avatar: defaultAvatar,\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n\n// export default connect(mapStateToProps, )(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Create an account\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Sign In\n      </NavLink>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect()(AppBar);\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n    color: 'rgb(61, 57, 57)',\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Your first online phonebook{' '}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import React, { Component, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1> Cтраница регистрации</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n}\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\n// class RegisterView extends Component {\n//   state = {\n//     name: '',\n//     email: '',\n//     password: '',\n//   };\n\n//   handleChange = ({ target: { name, value } }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onRegister(this.state);\n\n//     this.setState({ name: '', email: '', password: '' });\n//   };\n\n//   render() {\n//     const { name, email, password } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Страница регистрации</h1>\n\n//         <form\n//           onSubmit={this.handleSubmit}\n//           style={styles.form}\n//           autoComplete=\"off\"\n//         >\n//           <label style={styles.label}>\n//             Имя\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={name}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label style={styles.label}>\n//             Почта\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={email}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label style={styles.label}>\n//             Пароль\n//             <input\n//               type=\"password\"\n//               name=\"password\"\n//               value={password}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <button type=\"submit\">Зарегистрироваться</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\n// export default connect(null, mapDispatchToProps)(RegisterView);\n","import React, { Component, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: 320,\n    border: '1px solid rgb(61, 57, 57)',\n\n    padding: '10px',\n    backgroundColor: 'rgba(84, 81, 81, 0.353)',\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n\n    color: 'rgb(241, 239, 235)',\n  },\n  title: {\n    color: 'rgb(61, 57, 57)',\n  },\n  input: {\n     border: '1px solid rgb(241, 239, 235)',\n  borderRadius: '2px',\n\n  }\n   \n\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1 style={styles.title}>Log In</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Email\n          <input\n            style={styles.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n\n// class LoginView extends Component {\n//   state = {\n//     email: '',\n//     password: '',\n//   };\n\n//   handleChange = ({ target: { name, value } }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onLogin(this.state);\n\n//     this.setState({ name: '', email: '', password: '' });\n//   };\n\n//   render() {\n//     const { email, password } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Страница логина</h1>\n\n//         <form\n//           onSubmit={this.handleSubmit}\n//           style={styles.form}\n//           autoComplete=\"off\"\n//         >\n//           <label style={styles.label}>\n//             Почта\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={email}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <label style={styles.label}>\n//             Пароль\n//             <input\n//               type=\"password\"\n//               name=\"password\"\n//               value={password}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n\n//           <button type=\"submit\">Войти</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onLogin: authOperations.logIn,\n// };\n\n// export default connect(null, mapDispatchToProps)(LoginView);\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(39, 36, 36, 0.394);\n  padding: 15px;\n  width: fit-content;\n  border-radius: 6px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Wrapper } from './Container.styled';\n\nconst Container = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Name = styled.h2`\n  color: rgb(61, 57, 57);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Name } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <section>\n    {title && <Name>{title}</Name>}\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid rgb(61, 57, 57);\n  width: 300px;\n  padding: 10px;\n  background-color: rgba(84, 81, 81, 0.353);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  color: rgb(241, 239, 235);\n`;\n\nexport const Input = styled.input`\n  border: 1px solid rgb(241, 239, 235);\n  border-radius: 2px;\n  &[type='text'],\n  &[type='tel'] {\n    background-color: inherit;\n    border: 1px solid rgb(76, 74, 74);\n    color: aliceblue;\n  }\n  &[type='text']:focus {\n    background-color: rgb(61, 57, 57);\n  }\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 3px 5px;\n  background-color: rgb(68, 68, 154);\n  border-radius: 2px;\n  color: rgb(241, 239, 235);\n`;\n","import { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\nimport { Form, Label, Input, Button } from './PhoneBook.styled';\n\nclass Phonebook extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmitForm = evt => {\n    evt.preventDefault();\n    const newContactName = this.state.name;\n    const currentContacts = this.props.contacts;\n\n    const normalizedName = currentContacts.find(\n      ({ name }) => name.toLowerCase() === newContactName.toLowerCase(),\n    );\n\n    if (normalizedName) {\n      alert(`${newContactName} is alredy in contacts.`);\n      this.reset();\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleInputChange = evt => {\n    this.setState({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const formNameId = uuidv4();\n    const formNumberId = uuidv4();\n\n    return (\n      <Form onSubmit={this.handleSubmitForm}>\n        <Label htmlFor={formNameId}>\n          Name\n          <Input\n            id={formNameId}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </Label>\n\n        <Label htmlFor={formNumberId}>\n          Number\n          <Input\n            id={formNumberId}\n            type=\"tel\"\n            name=\"number\"\n            value={number.trim()}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </Label>\n        <Button type=\"submit\" onClick={this.addNameFhoneBook}>\n          Add contact\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Phonebook;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => {\n  console.log(state, `STATE11`)\n  return state.phoneBook.contacts;\n};\n\nexport const getFilter = state => state.phoneBook.filter;\n\nexport const getVisibleFilter = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nexport const getLoading = state => state.phoneBook.loading;\n\n// previous version\n\n// export const getVisibleFilter = state => {\n//     const filter = getFilter(state);\n//     const contacts = getContacts(state)\n//   return  contacts.filter(contact =>\n//     contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n//     );\n\n// }\n","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  addPhonebookError,\n  addPhonebookRequest,\n  addPhonebookSuccess,\n  deletePhonebookError,\n  deletePhonebookRequest,\n  deletePhonebookSuccess,\n  fetchPhonebookError,\n  fetchPhonebookRequest,\n  fetchPhonebookSuccess,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContact = () => async dispatch => {\n  dispatch(fetchPhonebookRequest());\n\n  try {\n    const { data } = await axios.get(`/contacts`);\n    dispatch(fetchPhonebookSuccess(data));\n  } catch (error) {\n    dispatch(fetchPhonebookError(error));\n  }\n  // axios\n  //   .get(`/contacts`)\n  //   .then(({ data }) => dispatch(fetchPhonebookSuccess(data)))\n  //   .catch(error => dispatch(fetchPhonebookError(error)))\n};\nexport const addContact = data => dispatch => {\n  const { name, number } = data;\n  const contactNew = {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  };\n\n  dispatch(addPhonebookRequest());\n\n  axios\n    .post(`/contacts`, contactNew)\n    .then(({ data }) => dispatch(addPhonebookSuccess(data)))\n    .catch(error => dispatch(addPhonebookError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deletePhonebookRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deletePhonebookSuccess(id)))\n    .catch(error => dispatch(deletePhonebookError(error)));\n};\n","import { connect } from 'react-redux';\nimport Phonebook from './Phonebook';\nimport { getContacts } from '../../redux/phoneBook/phonebook-selectors';\nimport { addContact } from '../../redux/phoneBook/phonebook-operations';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 300px;\n  padding: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  border: 1px solid rgb(61, 57, 57);\n  border-radius: 2px;\n  color: rgb(241, 239, 235);\n  background-color: rgba(84, 81, 81, 0.353);\n`;\n\nexport const Button = styled.button`\n  width: 50px;\n  background-color: rgb(68, 68, 154);\n  border-radius: 2px;\n  color: rgb(241, 239, 235);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Item, List } from './ContactList.styled';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phoneBook/phonebook-operations';\nimport { getVisibleFilter } from '../../redux/phoneBook/phonebook-selectors';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <List>\n    {contacts.map(({ name, number, id }) => (\n      <Item key={id}>\n        <span>{name} : </span>\n        <span>{number}</span>\n        <Button onClick={() => onDelete(id)}>Delete</Button>\n      </Item>\n    ))}\n  </List>\n);\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(deleteContact(id)),\n});\n\nContactList.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\n// export default ContactList;\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  width: 300px;\n  display: flex;\n  justify-content: flex-end;\n  border: 1px solid rgb(61, 57, 57);\n  padding: 10px;\n  color: rgb(241, 239, 235);\n  background-color: rgba(84, 81, 81, 0.353);\n`;\n\nexport const Input = styled.input`\n  border: 1px solid rgb(241, 239, 235);\n  border-radius: 2px;\n  &[type='text'],\n  &[type='tel'] {\n    background-color: inherit;\n    border: 1px solid rgb(76, 74, 74);\n    color: aliceblue;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ filter, onChange }) => (\n  <Label>\n    Find contacts by name\n    <Input\n      type=\"text\"\n      value={filter}\n      name=\"filter\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      onChange={onChange}\n    />\n  </Label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/phoneBook/phonebook-actions';\nimport { getFilter } from '../../redux/phoneBook/phonebook-selectors';\n\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: evt => dispatch(filterContacts(evt.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component, useEffect } from 'react';\nimport Section from '../components/Section';\nimport Phonebook from '../components/Phonebook';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport Container from '../components/Container';\nimport { connect, useDispatch } from 'react-redux';\nimport { fetchContact } from '../redux/phoneBook/phonebook-operations';\nimport { getLoading } from '../redux/phoneBook/phonebook-selectors';\n\nclass PhonebookViews extends Component {\n  componentDidMount() {\n    this.props.fetchContact();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <Phonebook />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter />\n          {this.props.isLoadingContacts && (\n            <h3 className=\"loading\">Loading...</h3>\n          )}\n          <ContactList />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookViews);\n// export default function PhonebookViews() {\n//   const dispatch = useDispatch();\n//   useEffect(() => dispatch(fetchContact()), [dispatch])\n//     return (\n//         <Container>\n//         <Section title=\"Phonebook\">\n//           <Phonebook />\n//         </Section>\n\n//         <Section title=\"Contacts\">\n//           <Filter />\n//           {isLoadingContacts && (\n//             <h3 className=\"loading\">Loading...</h3>\n//           )}\n//           <ContactList />\n//         </Section>\n//       </Container>\n//     );\n// }","// import {Component} from 'react';\n// import Section from '../Section';\n// import Phonebook from '../Phonebook';\n// import ContactList from '../ContactList';\n// import Filter from '../Filter';\n// import Container from '../Container';\n// import { connect } from 'react-redux';\n// import { fetchContact } from '../../redux/phoneBook/phonebook-operations';\n// import { getLoading } from '../../redux/phoneBook/phonebook-selectors';\n\n// class App extends Component {\n\n//   componentDidMount() {\n//   this.props.fetchContact()\n//   }\n\n//   render() {\n//     return (\n//       <Container>\n//         <Section title=\"Phonebook\">\n//           <Phonebook />\n//         </Section>\n\n//         <Section title=\"Contacts\">\n\n//           <Filter />\n//            {this.props.isLoadingContacts && <h3 className='loading'>Loading...</h3>}\n//           <ContactList />\n\n//         </Section>\n//       </Container>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => ({\n\n//     isLoadingContacts: getLoading(state),\n//   });\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchContact: () => dispatch(fetchContact()),\n\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\nimport React, { useEffect, Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBar from '../AppBar';\n\nimport HomeView from '../../views/HomeViews';\nimport RegisterView from '../../views/RegisterView';\nimport LoginView from '../../views/LoginViews';\nimport Container from '../Container';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport PhonebookViews from '../../views/PhonebookViews';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n// class App extends Component {\n//   componentDidMount() {\n//     console.log(this.props.onGetCurretnUser(), `rjehrkg`)\n//     ;\n//   }\n\n//   render() {\n//     return (\n//       <Container>\n//         <AppBar />\n\n//         <Switch>\n//           <Route exact path=\"/\" component={HomeView} />\n//           <Route path=\"/register\" component={RegisterView} />\n//           <Route  path=\"/login\" redirectTo=\"/contacts\" component={LoginView} />\n//           <Route path=\"/contacts\" redirectTo=\"/login\" component={PhonebookViews} />\n//         </Switch>\n//       </Container>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurretnUser: authOperations.fetchCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser())\n  }, [dispatch])\n  \n  return (\n    !isFetchingCurrentUser && (\n      <Container>\n        <AppBar />\n\n        <Switch>\n          <Route exact path=\"/\" component={HomeView} />\n          <Route path=\"/register\" component={RegisterView} />\n          <Route  path=\"/login\"  component={LoginView} />\n          <Route path=\"/Contacts\"  component={PhonebookViews} />\n        </Switch>\n      </Container>\n    )\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './components/App/App';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}